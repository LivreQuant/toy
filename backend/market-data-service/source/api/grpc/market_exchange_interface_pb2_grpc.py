# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from source.api.grpc import market_exchange_interface_pb2 as main_dot_services_dot_market__exchange__interface__pb2


class MarketDataServiceStub(object):
    """Market data service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeMarketData = channel.unary_stream(
                '/market_data.MarketDataService/SubscribeMarketData',
                request_serializer=main_dot_services_dot_market__exchange__interface__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=main_dot_services_dot_market__exchange__interface__pb2.MarketDataUpdate.FromString,
                )


class MarketDataServiceServicer(object):
    """Market data service definition
    """

    def SubscribeMarketData(self, request, context):
        """Stream market data to subscribers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeMarketData': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMarketData,
                    request_deserializer=main_dot_services_dot_market__exchange__interface__pb2.SubscriptionRequest.FromString,
                    response_serializer=main_dot_services_dot_market__exchange__interface__pb2.MarketDataUpdate.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'market_data.MarketDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketDataService(object):
    """Market data service definition
    """

    @staticmethod
    def SubscribeMarketData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/market_data.MarketDataService/SubscribeMarketData',
            main_dot_services_dot_market__exchange__interface__pb2.SubscriptionRequest.SerializeToString,
            main_dot_services_dot_market__exchange__interface__pb2.MarketDataUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
