{
    "name": "BookContract",
    "structs": {},
    "methods": [
        {
            "name": "initialize",
            "args": [
                {
                    "type": "byte[]",
                    "name": "user_id"
                },
                {
                    "type": "byte[]",
                    "name": "book_id"
                },
                {
                    "type": "byte[]",
                    "name": "parameters"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Initialize the contract with required parameters.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Handle user opt-in to the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "close_out",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "desc": "Handle user closing out from the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_global",
            "args": [
                {
                    "type": "byte[]",
                    "name": "new_user_id"
                },
                {
                    "type": "byte[]",
                    "name": "new_book_id"
                },
                {
                    "type": "account",
                    "name": "new_address"
                },
                {
                    "type": "byte[]",
                    "name": "new_params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the global parameters of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_status",
            "args": [
                {
                    "type": "string",
                    "name": "new_status"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the status of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_local",
            "args": [
                {
                    "type": "byte[]",
                    "name": "book_hash"
                },
                {
                    "type": "byte[]",
                    "name": "research_hash"
                },
                {
                    "type": "byte[]",
                    "name": "params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the local state for the user.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "desc": "Delete the contract if it's inactive.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 5
            },
            "local": {
                "ints": 0,
                "bytes": 3
            }
        },
        "keys": {
            "global": {
                "g_user_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "dXNlcl9pZA=="
                },
                "g_book_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym9va19pZA=="
                },
                "g_address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRkcmVzcw=="
                },
                "g_status": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdHVz"
                },
                "g_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cGFyYW1z"
                }
            },
            "local": {
                "l_book_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym9va19oYXNo"
                },
                "l_research_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cmVzZWFyY2hfaGFzaA=="
                },
                "l_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cGFyYW1z"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        },
        "global": {},
        "local": {}
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        643
                    ],
                    "errorMessage": "At least one parameter must change"
                },
                {
                    "pc": [
                        436,
                        603
                    ],
                    "errorMessage": "Contract must be active"
                },
                {
                    "pc": [
                        723
                    ],
                    "errorMessage": "Contract must be inactive to delete"
                },
                {
                    "pc": [
                        541
                    ],
                    "errorMessage": "New parameters must be different"
                },
                {
                    "pc": [
                        271
                    ],
                    "errorMessage": "OnCompletion is not CloseOut"
                },
                {
                    "pc": [
                        153
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        170,
                        205,
                        228,
                        306
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        289
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        466
                    ],
                    "errorMessage": "Only authorized user can close out"
                },
                {
                    "pc": [
                        428
                    ],
                    "errorMessage": "Only authorized user can opt in"
                },
                {
                    "pc": [
                        595
                    ],
                    "errorMessage": "Only authorized user can update local state"
                },
                {
                    "pc": [
                        675
                    ],
                    "errorMessage": "Only creator can delete application"
                },
                {
                    "pc": [
                        497
                    ],
                    "errorMessage": "Only creator can supdate parameters"
                },
                {
                    "pc": [
                        578
                    ],
                    "errorMessage": "Only creator can update status"
                },
                {
                    "pc": [
                        346
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        156,
                        173,
                        208,
                        231,
                        274,
                        292,
                        309
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        426,
                        464,
                        523,
                        593
                    ],
                    "errorMessage": "check self.g_address exists"
                },
                {
                    "pc": [
                        513
                    ],
                    "errorMessage": "check self.g_book_id exists"
                },
                {
                    "pc": [
                        533
                    ],
                    "errorMessage": "check self.g_params exists"
                },
                {
                    "pc": [
                        432,
                        599,
                        679,
                        702
                    ],
                    "errorMessage": "check self.g_status exists"
                },
                {
                    "pc": [
                        502
                    ],
                    "errorMessage": "check self.g_user_id exists"
                },
                {
                    "pc": [
                        610
                    ],
                    "errorMessage": "check self.l_book_hash exists for account"
                },
                {
                    "pc": [
                        635
                    ],
                    "errorMessage": "check self.l_params exists for account"
                },
                {
                    "pc": [
                        623
                    ],
                    "errorMessage": "check self.l_research_hash exists for account"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmCgQVH3x1BnBhcmFtcwZzdGF0dXMHYWRkcmVzcwNOQU4JYm9va19oYXNoDXJlc2VhcmNoX2hhc2gHdXNlcl9pZAdib29rX2lkBkFDVElWRTEbQQD4ggcEIyX5rwSHibzbBKvnnB8EivZ/UAT6mKvfBKHYG9MEIL719zYaAI4HAJ0AiwB4AE8AOAAVAAIjQzEZgQUSRDEYRIgB/hYoTFCwIkMxGRREMRhENhoBVwIANhoCVwIANhoDVwIAiAGGFihMULAiQzEZFEQxGEQ2GgFXAgCIAWAWKExQsCJDMRkURDEYRDYaAVcCADYaAlcCADYaAxfAHDYaBFcCAIgA5hYoTFCwIkMxGYECEkQxGESIALUWKExQsCJDMRkiEkQxGESIAH0WKExQsCJDMRkURDEYRDYaAVcCADYaAlcCADYaA1cCAIgAEhYoTFCwIkMxGUD/OzEYFEQiQ4oDAScHi/1nJwiL/mcrgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcpi/9nKoANSU5BQ1RJVkUtSU5JVGciiTEAIytlRBJEIyplRCcJEkQxACcFJwRmMQAnBicEZjEAKScEZiKJMQAjK2VEEkQxACcFJwRmMQAnBicEZjEAKScEZiKJigQBMQAyCRJEIycHZUSL/BNAAB8jJwhlRIv9E0AAFCMrZUSL/hNAAAojKWVEi/8TQQAaIkQnB4v8ZycIi/1nK4v+ZymL/2cqJwlnIokjQv/jigEBMQAyCRJEKov/ZyKJigMBMQAjK2VEEkQjKmVEJwkSRDEAIycFY0SL/RNAABkxACMnBmNEi/4TQAAMMQAjKWNEi/8TQQAYIkQxACcFi/1mMQAnBov+ZjEAKYv/ZiKJI0L/5TEAMgkSRCMqZUSADUlOQUNUSVZFLVNUT1ASQAAXIyplRIANSU5BQ1RJVkUtU09MRBJBAAQiRCKJI0L/+Q==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 8,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {},
    "schema": {
        "global": {
            "num_byte_slices": 5,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 3,
            "num_uints": 0
        }
    },
    "contract": {
        "name": "BookContract",
        "methods": [
            {
                "name": "initialize",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "user_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "book_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "parameters"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Initialize the contract with required parameters.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "OptIn"
                    ]
                },
                "readonly": false,
                "desc": "Handle user opt-in to the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "close_out",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "CloseOut"
                    ]
                },
                "readonly": false,
                "desc": "Handle user closing out from the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_global",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "new_user_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "new_book_id"
                    },
                    {
                        "type": "account",
                        "name": "new_address"
                    },
                    {
                        "type": "byte[]",
                        "name": "new_params"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the global parameters of the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_status",
                "args": [
                    {
                        "type": "string",
                        "name": "new_status"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the status of the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_local",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "book_hash"
                    },
                    {
                        "type": "byte[]",
                        "name": "research_hash"
                    },
                    {
                        "type": "byte[]",
                        "name": "params"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the local state for the user.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "delete_application",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "DeleteApplication"
                    ]
                },
                "readonly": false,
                "desc": "Delete the contract if it's inactive.",
                "events": [],
                "recommendations": {}
            }
        ],
        "desc": "Contract BookContract",
        "networks": {}
    },
    "hints": {
        "initialize(byte[],byte[],byte[])uint64": {},
        "opt_in()uint64": {},
        "close_out()uint64": {},
        "update_global(byte[],byte[],account,byte[])uint64": {},
        "update_status(string)uint64": {},
        "update_local(byte[],byte[],byte[])uint64": {},
        "delete_application()uint64": {}
    }
}