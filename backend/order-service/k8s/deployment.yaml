apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: default
  labels:
    app: order-service
    service: trading-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: order-service
        service: trading-platform
    spec:
      containers:
        - name: order-service
          image: ${ECR_REPOSITORY}/order-service:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
              name: http
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: LOG_LEVEL
            - name: REST_PORT
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: REST_PORT
            - name: HOST
              value: "0.0.0.0"
            # Database Configuration
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: order-service-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: order-service-secret
                  key: DB_PASSWORD
            # Redis Configuration
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: order-service-secret
                  key: REDIS_PASSWORD
                  optional: true
            # Service URLs
            - name: AUTH_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: order-service-config
                  key: AUTH_SERVICE_URL
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
      terminationGracePeriodSeconds: 60