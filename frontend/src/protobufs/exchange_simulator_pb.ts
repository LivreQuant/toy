// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file main/exchange_simulator.proto (package marketdataservice, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file main/exchange_simulator.proto.
 */
export const file_main_exchange_simulator: GenFile = /*@__PURE__*/
  fileDesc("Ch1tYWluL2V4Y2hhbmdlX3NpbXVsYXRvci5wcm90bxIRbWFya2V0ZGF0YXNlcnZpY2Ui2wEKDU1hcmtldERhdGFCYXISEQoJdGltZXN0YW1wGAEgASgJEhIKCmluc3RydW1lbnQYAiABKAkSEAoIZXhjaGFuZ2UYAyABKAkSEAoIY3VycmVuY3kYBCABKAkSDAoEb3BlbhgFIAEoARIMCgRoaWdoGAYgASgBEgsKA2xvdxgHIAEoARINCgVjbG9zZRgIIAEoARIOCgZ2b2x1bWUYCSABKAESDAoEdndhcBgKIAEoARIMCgR2d2FzGAsgASgBEgwKBHZ3YXYYDCABKAESDQoFY291bnQYDSABKA0iQAoOTWFya2V0RGF0YUJhcnMSLgoEYmFycxgBIAMoCzIgLm1hcmtldGRhdGFzZXJ2aWNlLk1hcmtldERhdGFCYXIigAEKC01hcmtldFN0YXRlEhEKCXRpbWVzdGFtcBgBIAEoCRISCgppbnN0cnVtZW50GAIgASgJEg8KB2V4aGFuZ2UYAyABKAkSEAoIY3VycmVuY3kYBCABKAkSEgoKbGFzdF9wcmljZRgFIAEoARITCgtsYXN0X3ZvbHVtZRgGIAEoASJFChNNYXJrZXRTdGF0ZVNuYXBzaG90Ei4KBnN0YXRlcxgBIAMoCzIeLm1hcmtldGRhdGFzZXJ2aWNlLk1hcmtldFN0YXRlIjYKEk1hcmtldERhdGFSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkyvQIKF0ZpeFNpbU1hcmtldERhdGFTZXJ2aWNlElUKFFN0cmVhbU1hcmtldERhdGFCYXJzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GiEubWFya2V0ZGF0YXNlcnZpY2UuTWFya2V0RGF0YUJhcnMiADABEmIKFEluc2VydE1hcmtldERhdGFCYXJzEiEubWFya2V0ZGF0YXNlcnZpY2UuTWFya2V0RGF0YUJhcnMaJS5tYXJrZXRkYXRhc2VydmljZS5NYXJrZXREYXRhUmVzcG9uc2UiABJnChRJbnNlcnRTT0RNYXJrZXRTdGF0ZRImLm1hcmtldGRhdGFzZXJ2aWNlLk1hcmtldFN0YXRlU25hcHNob3QaJS5tYXJrZXRkYXRhc2VydmljZS5NYXJrZXREYXRhUmVzcG9uc2UiAEKTAQoVY29tLm1hcmtldGRhdGFzZXJ2aWNlQhZFeGNoYW5nZVNpbXVsYXRvclByb3RvUAGiAgNNWFiqAhFNYXJrZXRkYXRhc2VydmljZcoCEU1hcmtldGRhdGFzZXJ2aWNl4gIdTWFya2V0ZGF0YXNlcnZpY2VcR1BCTWV0YWRhdGHqAhFNYXJrZXRkYXRhc2VydmljZWIGcHJvdG8z", [file_google_protobuf_empty]);

/**
 * @generated from message marketdataservice.MarketDataBar
 */
export type MarketDataBar = Message<"marketdataservice.MarketDataBar"> & {
  /**
   * UTC timestamp in ISO8601 format
   *
   * @generated from field: string timestamp = 1;
   */
  timestamp: string;

  /**
   * @generated from field: string instrument = 2;
   */
  instrument: string;

  /**
   * @generated from field: string exchange = 3;
   */
  exchange: string;

  /**
   * @generated from field: string currency = 4;
   */
  currency: string;

  /**
   * @generated from field: double open = 5;
   */
  open: number;

  /**
   * @generated from field: double high = 6;
   */
  high: number;

  /**
   * @generated from field: double low = 7;
   */
  low: number;

  /**
   * @generated from field: double close = 8;
   */
  close: number;

  /**
   * @generated from field: double volume = 9;
   */
  volume: number;

  /**
   * Volume weighted price
   *
   * @generated from field: double vwap = 10;
   */
  vwap: number;

  /**
   * Volume weighted spread
   *
   * @generated from field: double vwas = 11;
   */
  vwas: number;

  /**
   * volume weighted price volatility (= sqrt(sum(volume_i * (price_i - VWAP)^2) / total_volume))
   *
   * @generated from field: double vwav = 12;
   */
  vwav: number;

  /**
   * Number of trades in the period
   *
   * @generated from field: uint32 count = 13;
   */
  count: number;
};

/**
 * Describes the message marketdataservice.MarketDataBar.
 * Use `create(MarketDataBarSchema)` to create a new message.
 */
export const MarketDataBarSchema: GenMessage<MarketDataBar> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 0);

/**
 * @generated from message marketdataservice.MarketDataBars
 */
export type MarketDataBars = Message<"marketdataservice.MarketDataBars"> & {
  /**
   * @generated from field: repeated marketdataservice.MarketDataBar bars = 1;
   */
  bars: MarketDataBar[];
};

/**
 * Describes the message marketdataservice.MarketDataBars.
 * Use `create(MarketDataBarsSchema)` to create a new message.
 */
export const MarketDataBarsSchema: GenMessage<MarketDataBars> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 1);

/**
 * New message for SOD market state
 *
 * @generated from message marketdataservice.MarketState
 */
export type MarketState = Message<"marketdataservice.MarketState"> & {
  /**
   * @generated from field: string timestamp = 1;
   */
  timestamp: string;

  /**
   * @generated from field: string instrument = 2;
   */
  instrument: string;

  /**
   * @generated from field: string exhange = 3;
   */
  exhange: string;

  /**
   * @generated from field: string currency = 4;
   */
  currency: string;

  /**
   * Previous closing price
   *
   * @generated from field: double last_price = 5;
   */
  lastPrice: number;

  /**
   * Previous day's volume
   *
   * @generated from field: double last_volume = 6;
   */
  lastVolume: number;
};

/**
 * Describes the message marketdataservice.MarketState.
 * Use `create(MarketStateSchema)` to create a new message.
 */
export const MarketStateSchema: GenMessage<MarketState> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 2);

/**
 * @generated from message marketdataservice.MarketStateSnapshot
 */
export type MarketStateSnapshot = Message<"marketdataservice.MarketStateSnapshot"> & {
  /**
   * @generated from field: repeated marketdataservice.MarketState states = 1;
   */
  states: MarketState[];
};

/**
 * Describes the message marketdataservice.MarketStateSnapshot.
 * Use `create(MarketStateSnapshotSchema)` to create a new message.
 */
export const MarketStateSnapshotSchema: GenMessage<MarketStateSnapshot> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 3);

/**
 * @generated from message marketdataservice.MarketDataResponse
 */
export type MarketDataResponse = Message<"marketdataservice.MarketDataResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message marketdataservice.MarketDataResponse.
 * Use `create(MarketDataResponseSchema)` to create a new message.
 */
export const MarketDataResponseSchema: GenMessage<MarketDataResponse> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 4);

/**
 * @generated from service marketdataservice.FixSimMarketDataService
 */
export const FixSimMarketDataService: GenService<{
  /**
   * @generated from rpc marketdataservice.FixSimMarketDataService.StreamMarketDataBars
   */
  streamMarketDataBars: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof MarketDataBarsSchema;
  },
  /**
   * @generated from rpc marketdataservice.FixSimMarketDataService.InsertMarketDataBars
   */
  insertMarketDataBars: {
    methodKind: "unary";
    input: typeof MarketDataBarsSchema;
    output: typeof MarketDataResponseSchema;
  },
  /**
   * @generated from rpc marketdataservice.FixSimMarketDataService.InsertSODMarketState
   */
  insertSODMarketState: {
    methodKind: "unary";
    input: typeof MarketStateSnapshotSchema;
    output: typeof MarketDataResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_exchange_simulator, 0);


