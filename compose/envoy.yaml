# envoy/envoy.yaml
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/auth.AuthService" }
                          route:
                            cluster: auth_service
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match: { prefix: "/session_manager.SessionManagerService" }
                          route:
                            cluster: session_manager_service
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match: { prefix: "/simulator_manager.SimulatorManagerService" }
                          route:
                            cluster: simulator_manager_service
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match: { prefix: "/exchange_simulator.ExchangeSimulatorService" }
                          route:
                            cluster: exchange_simulator_service
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  
  clusters:
    - name: auth_service
      connect_timeout: 0.25s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth
                      port_value: 50051
    
    - name: session_manager_service
      connect_timeout: 0.25s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: session_manager_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: session-manager
                      port_value: 50052
    
    - name: simulator_manager_service
      connect_timeout: 0.25s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: simulator_manager_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: simulator-manager
                      port_value: 50053
    
    # This is a dynamic cluster that will point to the specific simulator pod
    # In a real implementation, we would need to update this dynamically or use a service discovery mechanism
    - name: exchange_simulator_service
      connect_timeout: 0.25s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: exchange_simulator_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: simulator-manager  # Placeholder - will be updated dynamically
                      port_value: 50053          # Placeholder - will be updated dynamically