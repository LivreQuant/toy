version: '3.8'

services:
  # Redis for session storage and connection monitoring
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - trading-network

  # Frontend service with React app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - envoy-proxy
    networks:
      - trading-network

  # Envoy proxy for gRPC-Web
  envoy-proxy:
    image: envoyproxy/envoy:v1.20-latest
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "8080:8080"
    networks:
      - trading-network

  # Auth service
  auth:
    build:
      context: ./backend/auth
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - trading-network

  # Session manager service
  session-manager:
    build:
      context: ./backend/session-manager
      dockerfile: Dockerfile
    depends_on:
      - auth
      - redis
    ports:
      - "50052:50052"
    networks:
      - trading-network

  # Simulator manager service
  simulator-manager:
    build:
      context: ./backend/simulator-manager
      dockerfile: Dockerfile
    depends_on:
      - auth
      - session-manager
      - redis
    ports:
      - "50053:50053"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - trading-network

  # Order service
  order-service:
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
    depends_on:
      - auth
      - session-manager
      - redis
    ports:
      - "50054:50054"
    networks:
      - trading-network

  # Connection quality monitoring service
  connection-monitor:
    build:
      context: ./backend/connection-monitor
      dockerfile: Dockerfile
    depends_on:
      - redis
    ports:
      - "50055:50055"
    networks:
      - trading-network

volumes:
  redis-data:

networks:
  trading-network:
    driver: bridge