# docker-compose.yml
version: '3.8'

services:
  # Database
  postgres:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: opentp
      POSTGRES_PASSWORD: samaral
      POSTGRES_DB: opentp
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Redis for session management
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  # Session Manager Service
  session-manager:
    build:
      context: ./interface/session-manager-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"  # HTTP
      - "8088:8088"  # Websocket
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
      POD_NAME: session-manager-1
      LOG_LEVEL: DEBUG

  # Auth Service
  auth-service:
    build:
      context: ./interface/authorization-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "50051:50051"
    environment:
      DB_HOST: postgres
      LOG_LEVEL: DEBUG

  # Exchange Simulator
  exchange-simulator:
    build:
      context: ./interface/exchange-manager-service
      dockerfile: Dockerfile
    ports:
      - "50055:50055"
    environment:
      LOG_LEVEL: DEBUG

  # Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Uses Node development server
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080
      REACT_APP_WS_URL: ws://localhost:8088/ws
    volumes:
      - ./frontend/src:/app/src  # For hot-reloading

volumes:
  postgres-data:
  redis-data: