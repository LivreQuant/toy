# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from main import exchange_simulator_pb2 as main_dot_exchange__simulator__pb2


class FixSimMarketDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamMarketDataBars = channel.unary_stream(
                '/marketdataservice.FixSimMarketDataService/StreamMarketDataBars',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=main_dot_exchange__simulator__pb2.MarketDataBars.FromString,
                )
        self.InsertMarketDataBars = channel.unary_unary(
                '/marketdataservice.FixSimMarketDataService/InsertMarketDataBars',
                request_serializer=main_dot_exchange__simulator__pb2.MarketDataBars.SerializeToString,
                response_deserializer=main_dot_exchange__simulator__pb2.MarketDataResponse.FromString,
                )
        self.InsertSODMarketState = channel.unary_unary(
                '/marketdataservice.FixSimMarketDataService/InsertSODMarketState',
                request_serializer=main_dot_exchange__simulator__pb2.MarketStateSnapshot.SerializeToString,
                response_deserializer=main_dot_exchange__simulator__pb2.MarketDataResponse.FromString,
                )


class FixSimMarketDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StreamMarketDataBars(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertMarketDataBars(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertSODMarketState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FixSimMarketDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamMarketDataBars': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamMarketDataBars,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=main_dot_exchange__simulator__pb2.MarketDataBars.SerializeToString,
            ),
            'InsertMarketDataBars': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertMarketDataBars,
                    request_deserializer=main_dot_exchange__simulator__pb2.MarketDataBars.FromString,
                    response_serializer=main_dot_exchange__simulator__pb2.MarketDataResponse.SerializeToString,
            ),
            'InsertSODMarketState': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertSODMarketState,
                    request_deserializer=main_dot_exchange__simulator__pb2.MarketStateSnapshot.FromString,
                    response_serializer=main_dot_exchange__simulator__pb2.MarketDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'marketdataservice.FixSimMarketDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FixSimMarketDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StreamMarketDataBars(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/marketdataservice.FixSimMarketDataService/StreamMarketDataBars',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            main_dot_exchange__simulator__pb2.MarketDataBars.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertMarketDataBars(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketdataservice.FixSimMarketDataService/InsertMarketDataBars',
            main_dot_exchange__simulator__pb2.MarketDataBars.SerializeToString,
            main_dot_exchange__simulator__pb2.MarketDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertSODMarketState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketdataservice.FixSimMarketDataService/InsertSODMarketState',
            main_dot_exchange__simulator__pb2.MarketStateSnapshot.SerializeToString,
            main_dot_exchange__simulator__pb2.MarketDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
