// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file main/exchange_simulator.proto (package exchange, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file main/exchange_simulator.proto.
 */
export const file_main_exchange_simulator: GenFile = /*@__PURE__*/
  fileDesc("Ch1tYWluL2V4Y2hhbmdlX3NpbXVsYXRvci5wcm90bxIIZXhjaGFuZ2UiRwoNU3RyZWFtUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhEKCWNsaWVudF9pZBgCIAEoCRIPCgdzeW1ib2xzGAMgAygJIq4BChJFeGNoYW5nZURhdGFVcGRhdGUSEQoJdGltZXN0YW1wGAEgASgDEikKC21hcmtldF9kYXRhGAIgAygLMhQuZXhjaGFuZ2UuTWFya2V0RGF0YRIsCg1vcmRlcl91cGRhdGVzGAMgAygLMhUuZXhjaGFuZ2UuT3JkZXJVcGRhdGUSLAoJcG9ydGZvbGlvGAQgASgLMhkuZXhjaGFuZ2UuUG9ydGZvbGlvU3RhdHVzIoEBCgpNYXJrZXREYXRhEg4KBnN5bWJvbBgBIAEoCRILCgNiaWQYAiABKAESCwoDYXNrGAMgASgBEhAKCGJpZF9zaXplGAQgASgFEhAKCGFza19zaXplGAUgASgFEhIKCmxhc3RfcHJpY2UYBiABKAESEQoJbGFzdF9zaXplGAcgASgFIm8KC09yZGVyVXBkYXRlEhAKCG9yZGVyX2lkGAEgASgJEg4KBnN5bWJvbBgCIAEoCRIOCgZzdGF0dXMYAyABKAkSFwoPZmlsbGVkX3F1YW50aXR5GAQgASgFEhUKDWF2ZXJhZ2VfcHJpY2UYBSABKAEiYwoPUG9ydGZvbGlvU3RhdHVzEiUKCXBvc2l0aW9ucxgBIAMoCzISLmV4Y2hhbmdlLlBvc2l0aW9uEhQKDGNhc2hfYmFsYW5jZRgCIAEoARITCgt0b3RhbF92YWx1ZRgDIAEoASJYCghQb3NpdGlvbhIOCgZzeW1ib2wYASABKAkSEAoIcXVhbnRpdHkYAiABKAUSFAoMYXZlcmFnZV9jb3N0GAMgASgBEhQKDG1hcmtldF92YWx1ZRgEIAEoASJTChBIZWFydGJlYXRSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSEQoJY2xpZW50X2lkGAIgASgJEhgKEGNsaWVudF90aW1lc3RhbXAYAyABKAMiPgoRSGVhcnRiZWF0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIYChBzZXJ2ZXJfdGltZXN0YW1wGAIgASgDMqgBChFFeGNoYW5nZVNpbXVsYXRvchJNChJTdHJlYW1FeGNoYW5nZURhdGESFy5leGNoYW5nZS5TdHJlYW1SZXF1ZXN0GhwuZXhjaGFuZ2UuRXhjaGFuZ2VEYXRhVXBkYXRlMAESRAoJSGVhcnRiZWF0EhouZXhjaGFuZ2UuSGVhcnRiZWF0UmVxdWVzdBobLmV4Y2hhbmdlLkhlYXJ0YmVhdFJlc3BvbnNlQmYKDGNvbS5leGNoYW5nZUIWRXhjaGFuZ2VTaW11bGF0b3JQcm90b1ABogIDRVhYqgIIRXhjaGFuZ2XKAghFeGNoYW5nZeICFEV4Y2hhbmdlXEdQQk1ldGFkYXRh6gIIRXhjaGFuZ2ViBnByb3RvMw");

/**
 * @generated from message exchange.StreamRequest
 */
export type StreamRequest = Message<"exchange.StreamRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: repeated string symbols = 3;
   */
  symbols: string[];
};

/**
 * Describes the message exchange.StreamRequest.
 * Use `create(StreamRequestSchema)` to create a new message.
 */
export const StreamRequestSchema: GenMessage<StreamRequest> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 0);

/**
 * @generated from message exchange.ExchangeDataUpdate
 */
export type ExchangeDataUpdate = Message<"exchange.ExchangeDataUpdate"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;

  /**
   * Market data for all requested symbols
   *
   * @generated from field: repeated exchange.MarketData market_data = 2;
   */
  marketData: MarketData[];

  /**
   * Order updates
   *
   * @generated from field: repeated exchange.OrderUpdate order_updates = 3;
   */
  orderUpdates: OrderUpdate[];

  /**
   * Portfolio information
   *
   * @generated from field: exchange.PortfolioStatus portfolio = 4;
   */
  portfolio?: PortfolioStatus;
};

/**
 * Describes the message exchange.ExchangeDataUpdate.
 * Use `create(ExchangeDataUpdateSchema)` to create a new message.
 */
export const ExchangeDataUpdateSchema: GenMessage<ExchangeDataUpdate> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 1);

/**
 * @generated from message exchange.MarketData
 */
export type MarketData = Message<"exchange.MarketData"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: double bid = 2;
   */
  bid: number;

  /**
   * @generated from field: double ask = 3;
   */
  ask: number;

  /**
   * @generated from field: int32 bid_size = 4;
   */
  bidSize: number;

  /**
   * @generated from field: int32 ask_size = 5;
   */
  askSize: number;

  /**
   * @generated from field: double last_price = 6;
   */
  lastPrice: number;

  /**
   * @generated from field: int32 last_size = 7;
   */
  lastSize: number;
};

/**
 * Describes the message exchange.MarketData.
 * Use `create(MarketDataSchema)` to create a new message.
 */
export const MarketDataSchema: GenMessage<MarketData> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 2);

/**
 * @generated from message exchange.OrderUpdate
 */
export type OrderUpdate = Message<"exchange.OrderUpdate"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;

  /**
   * @generated from field: string symbol = 2;
   */
  symbol: string;

  /**
   * "NEW", "ACCEPTED", "REJECTED", "FILLED", etc.
   *
   * @generated from field: string status = 3;
   */
  status: string;

  /**
   * @generated from field: int32 filled_quantity = 4;
   */
  filledQuantity: number;

  /**
   * @generated from field: double average_price = 5;
   */
  averagePrice: number;
};

/**
 * Describes the message exchange.OrderUpdate.
 * Use `create(OrderUpdateSchema)` to create a new message.
 */
export const OrderUpdateSchema: GenMessage<OrderUpdate> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 3);

/**
 * @generated from message exchange.PortfolioStatus
 */
export type PortfolioStatus = Message<"exchange.PortfolioStatus"> & {
  /**
   * @generated from field: repeated exchange.Position positions = 1;
   */
  positions: Position[];

  /**
   * @generated from field: double cash_balance = 2;
   */
  cashBalance: number;

  /**
   * @generated from field: double total_value = 3;
   */
  totalValue: number;
};

/**
 * Describes the message exchange.PortfolioStatus.
 * Use `create(PortfolioStatusSchema)` to create a new message.
 */
export const PortfolioStatusSchema: GenMessage<PortfolioStatus> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 4);

/**
 * @generated from message exchange.Position
 */
export type Position = Message<"exchange.Position"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;

  /**
   * @generated from field: double average_cost = 3;
   */
  averageCost: number;

  /**
   * @generated from field: double market_value = 4;
   */
  marketValue: number;
};

/**
 * Describes the message exchange.Position.
 * Use `create(PositionSchema)` to create a new message.
 */
export const PositionSchema: GenMessage<Position> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 5);

/**
 * @generated from message exchange.HeartbeatRequest
 */
export type HeartbeatRequest = Message<"exchange.HeartbeatRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: int64 client_timestamp = 3;
   */
  clientTimestamp: bigint;
};

/**
 * Describes the message exchange.HeartbeatRequest.
 * Use `create(HeartbeatRequestSchema)` to create a new message.
 */
export const HeartbeatRequestSchema: GenMessage<HeartbeatRequest> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 6);

/**
 * @generated from message exchange.HeartbeatResponse
 */
export type HeartbeatResponse = Message<"exchange.HeartbeatResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: int64 server_timestamp = 2;
   */
  serverTimestamp: bigint;
};

/**
 * Describes the message exchange.HeartbeatResponse.
 * Use `create(HeartbeatResponseSchema)` to create a new message.
 */
export const HeartbeatResponseSchema: GenMessage<HeartbeatResponse> = /*@__PURE__*/
  messageDesc(file_main_exchange_simulator, 7);

/**
 * @generated from service exchange.ExchangeSimulator
 */
export const ExchangeSimulator: GenService<{
  /**
   * Single unified stream for all exchange data
   *
   * @generated from rpc exchange.ExchangeSimulator.StreamExchangeData
   */
  streamExchangeData: {
    methodKind: "server_streaming";
    input: typeof StreamRequestSchema;
    output: typeof ExchangeDataUpdateSchema;
  },
  /**
   * Heartbeat to verify connection
   *
   * @generated from rpc exchange.ExchangeSimulator.Heartbeat
   */
  heartbeat: {
    methodKind: "unary";
    input: typeof HeartbeatRequestSchema;
    output: typeof HeartbeatResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_exchange_simulator, 0);

