// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file main/services/conviction_exchange_interface.proto (package conviction_exchange, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file main/services/conviction_exchange_interface.proto.
 */
export const file_main_services_conviction_exchange_interface: GenFile = /*@__PURE__*/
  fileDesc("CjFtYWluL3NlcnZpY2VzL2NvbnZpY3Rpb25fZXhjaGFuZ2VfaW50ZXJmYWNlLnByb3RvEhNjb252aWN0aW9uX2V4Y2hhbmdlIrgCChFDb252aWN0aW9uUmVxdWVzdBIVCg1pbnN0cnVtZW50X2lkGAEgASgJEhUKDWNvbnZpY3Rpb25faWQYAiABKAkSQgoScGFydGljaXBhdGlvbl9yYXRlGAMgASgOMiYuY29udmljdGlvbl9leGNoYW5nZS5QYXJ0aWNpcGF0aW9uUmF0ZRILCgN0YWcYBCABKAkSJwoEc2lkZRgFIAEoDjIZLmNvbnZpY3Rpb25fZXhjaGFuZ2UuU2lkZRINCgVzY29yZRgGIAEoARIQCghxdWFudGl0eRgHIAEoARIOCgZ6c2NvcmUYCCABKAESGQoRdGFyZ2V0X3BlcmNlbnRhZ2UYCSABKAESFwoPdGFyZ2V0X25vdGlvbmFsGAogASgBEhYKDmhvcml6b25fenNjb3JlGAsgASgJIlUKFkJhdGNoQ29udmljdGlvblJlcXVlc3QSOwoLY29udmljdGlvbnMYASADKAsyJi5jb252aWN0aW9uX2V4Y2hhbmdlLkNvbnZpY3Rpb25SZXF1ZXN0Ik8KEkNvbnZpY3Rpb25SZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhEKCWJyb2tlcl9pZBgCIAEoCRIVCg1lcnJvcl9tZXNzYWdlGAMgASgJInsKF0JhdGNoQ29udmljdGlvblJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSOAoHcmVzdWx0cxgCIAMoCzInLmNvbnZpY3Rpb25fZXhjaGFuZ2UuQ29udmljdGlvblJlc3BvbnNlEhUKDWVycm9yX21lc3NhZ2UYAyABKAkiKwoSQmF0Y2hDYW5jZWxSZXF1ZXN0EhUKDWNvbnZpY3Rpb25faWQYASADKAkiSQoMQ2FuY2VsUmVzdWx0EhEKCWJyb2tlcl9pZBgBIAEoCRIPCgdzdWNjZXNzGAIgASgIEhUKDWVycm9yX21lc3NhZ2UYAyABKAkicQoTQmF0Y2hDYW5jZWxSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEjIKB3Jlc3VsdHMYAiADKAsyIS5jb252aWN0aW9uX2V4Y2hhbmdlLkNhbmNlbFJlc3VsdBIVCg1lcnJvcl9tZXNzYWdlGAMgASgJKhkKBFNpZGUSBwoDQlVZEAASCAoEU0VMTBABKjIKEVBhcnRpY2lwYXRpb25SYXRlEgcKA0xPVxAAEgoKBk1FRElVTRABEggKBEhJR0gQAjL1AQobQ29udmljdGlvbkV4Y2hhbmdlU2ltdWxhdG9yEm4KEVN1Ym1pdENvbnZpY3Rpb25zEisuY29udmljdGlvbl9leGNoYW5nZS5CYXRjaENvbnZpY3Rpb25SZXF1ZXN0GiwuY29udmljdGlvbl9leGNoYW5nZS5CYXRjaENvbnZpY3Rpb25SZXNwb25zZRJmChFDYW5jZWxDb252aWN0aW9ucxInLmNvbnZpY3Rpb25fZXhjaGFuZ2UuQmF0Y2hDYW5jZWxSZXF1ZXN0GiguY29udmljdGlvbl9leGNoYW5nZS5CYXRjaENhbmNlbFJlc3BvbnNlQqMBChdjb20uY29udmljdGlvbl9leGNoYW5nZUIgQ29udmljdGlvbkV4Y2hhbmdlSW50ZXJmYWNlUHJvdG9QAaICA0NYWKoCEkNvbnZpY3Rpb25FeGNoYW5nZcoCEkNvbnZpY3Rpb25FeGNoYW5nZeICHkNvbnZpY3Rpb25FeGNoYW5nZVxHUEJNZXRhZGF0YeoCEkNvbnZpY3Rpb25FeGNoYW5nZWIGcHJvdG8z");

/**
 * @generated from message conviction_exchange.ConvictionRequest
 */
export type ConvictionRequest = Message<"conviction_exchange.ConvictionRequest"> & {
  /**
   * @generated from field: string instrument_id = 1;
   */
  instrumentId: string;

  /**
   * @generated from field: string conviction_id = 2;
   */
  convictionId: string;

  /**
   * @generated from field: conviction_exchange.ParticipationRate participation_rate = 3;
   */
  participationRate: ParticipationRate;

  /**
   * @generated from field: string tag = 4;
   */
  tag: string;

  /**
   * @generated from field: conviction_exchange.Side side = 5;
   */
  side: Side;

  /**
   * @generated from field: double score = 6;
   */
  score: number;

  /**
   * @generated from field: double quantity = 7;
   */
  quantity: number;

  /**
   * @generated from field: double zscore = 8;
   */
  zscore: number;

  /**
   * @generated from field: double target_percentage = 9;
   */
  targetPercentage: number;

  /**
   * @generated from field: double target_notional = 10;
   */
  targetNotional: number;

  /**
   * @generated from field: string horizon_zscore = 11;
   */
  horizonZscore: string;
};

/**
 * Describes the message conviction_exchange.ConvictionRequest.
 * Use `create(ConvictionRequestSchema)` to create a new message.
 */
export const ConvictionRequestSchema: GenMessage<ConvictionRequest> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 0);

/**
 * @generated from message conviction_exchange.BatchConvictionRequest
 */
export type BatchConvictionRequest = Message<"conviction_exchange.BatchConvictionRequest"> & {
  /**
   * @generated from field: repeated conviction_exchange.ConvictionRequest convictions = 1;
   */
  convictions: ConvictionRequest[];
};

/**
 * Describes the message conviction_exchange.BatchConvictionRequest.
 * Use `create(BatchConvictionRequestSchema)` to create a new message.
 */
export const BatchConvictionRequestSchema: GenMessage<BatchConvictionRequest> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 1);

/**
 * @generated from message conviction_exchange.ConvictionResponse
 */
export type ConvictionResponse = Message<"conviction_exchange.ConvictionResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string broker_id = 2;
   */
  brokerId: string;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message conviction_exchange.ConvictionResponse.
 * Use `create(ConvictionResponseSchema)` to create a new message.
 */
export const ConvictionResponseSchema: GenMessage<ConvictionResponse> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 2);

/**
 * @generated from message conviction_exchange.BatchConvictionResponse
 */
export type BatchConvictionResponse = Message<"conviction_exchange.BatchConvictionResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: repeated conviction_exchange.ConvictionResponse results = 2;
   */
  results: ConvictionResponse[];

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message conviction_exchange.BatchConvictionResponse.
 * Use `create(BatchConvictionResponseSchema)` to create a new message.
 */
export const BatchConvictionResponseSchema: GenMessage<BatchConvictionResponse> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 3);

/**
 * @generated from message conviction_exchange.BatchCancelRequest
 */
export type BatchCancelRequest = Message<"conviction_exchange.BatchCancelRequest"> & {
  /**
   * @generated from field: repeated string conviction_id = 1;
   */
  convictionId: string[];
};

/**
 * Describes the message conviction_exchange.BatchCancelRequest.
 * Use `create(BatchCancelRequestSchema)` to create a new message.
 */
export const BatchCancelRequestSchema: GenMessage<BatchCancelRequest> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 4);

/**
 * @generated from message conviction_exchange.CancelResult
 */
export type CancelResult = Message<"conviction_exchange.CancelResult"> & {
  /**
   * @generated from field: string broker_id = 1;
   */
  brokerId: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message conviction_exchange.CancelResult.
 * Use `create(CancelResultSchema)` to create a new message.
 */
export const CancelResultSchema: GenMessage<CancelResult> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 5);

/**
 * @generated from message conviction_exchange.BatchCancelResponse
 */
export type BatchCancelResponse = Message<"conviction_exchange.BatchCancelResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: repeated conviction_exchange.CancelResult results = 2;
   */
  results: CancelResult[];

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message conviction_exchange.BatchCancelResponse.
 * Use `create(BatchCancelResponseSchema)` to create a new message.
 */
export const BatchCancelResponseSchema: GenMessage<BatchCancelResponse> = /*@__PURE__*/
  messageDesc(file_main_services_conviction_exchange_interface, 6);

/**
 * @generated from enum conviction_exchange.Side
 */
export enum Side {
  /**
   * @generated from enum value: BUY = 0;
   */
  BUY = 0,

  /**
   * @generated from enum value: SELL = 1;
   */
  SELL = 1,
}

/**
 * Describes the enum conviction_exchange.Side.
 */
export const SideSchema: GenEnum<Side> = /*@__PURE__*/
  enumDesc(file_main_services_conviction_exchange_interface, 0);

/**
 * @generated from enum conviction_exchange.ParticipationRate
 */
export enum ParticipationRate {
  /**
   * @generated from enum value: LOW = 0;
   */
  LOW = 0,

  /**
   * @generated from enum value: MEDIUM = 1;
   */
  MEDIUM = 1,

  /**
   * @generated from enum value: HIGH = 2;
   */
  HIGH = 2,
}

/**
 * Describes the enum conviction_exchange.ParticipationRate.
 */
export const ParticipationRateSchema: GenEnum<ParticipationRate> = /*@__PURE__*/
  enumDesc(file_main_services_conviction_exchange_interface, 1);

/**
 * @generated from service conviction_exchange.ConvictionExchangeSimulator
 */
export const ConvictionExchangeSimulator: GenService<{
  /**
   * Submit convictions in batch
   *
   * @generated from rpc conviction_exchange.ConvictionExchangeSimulator.SubmitConvictions
   */
  submitConvictions: {
    methodKind: "unary";
    input: typeof BatchConvictionRequestSchema;
    output: typeof BatchConvictionResponseSchema;
  },
  /**
   * Cancel convictions in batch
   *
   * @generated from rpc conviction_exchange.ConvictionExchangeSimulator.CancelConvictions
   */
  cancelConvictions: {
    methodKind: "unary";
    input: typeof BatchCancelRequestSchema;
    output: typeof BatchCancelResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_services_conviction_exchange_interface, 0);

