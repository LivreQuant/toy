// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file main/services/market_exchange_interface.proto (package market_data, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file main/services/market_exchange_interface.proto.
 */
export const file_main_services_market_exchange_interface: GenFile = /*@__PURE__*/
  fileDesc("Ci1tYWluL3NlcnZpY2VzL21hcmtldF9leGNoYW5nZV9pbnRlcmZhY2UucHJvdG8SC21hcmtldF9kYXRhIscBCgpFcXVpdHlEYXRhEg4KBnN5bWJvbBgBIAEoCRIMCgRvcGVuGAIgASgBEgwKBGhpZ2gYAyABKAESCwoDbG93GAQgASgBEg0KBWNsb3NlGAUgASgBEg4KBnZvbHVtZRgGIAEoBRITCgt0cmFkZV9jb3VudBgHIAEoBRIMCgR2d2FwGAggASgBEhAKCGV4Y2hhbmdlGAkgASgJEhAKCGN1cnJlbmN5GAogASgJEgwKBHZ3YXMYCyABKAESDAoEdndhdhgMIAEoASJVCgZGWFJhdGUSFQoNZnJvbV9jdXJyZW5jeRgBIAEoCRITCgt0b19jdXJyZW5jeRgCIAEoCRIRCgl0aW1lc3RhbXAYAyABKAkSDAoEcmF0ZRgEIAEoASJFChNTdWJzY3JpcHRpb25SZXF1ZXN0EhUKDXN1YnNjcmliZXJfaWQYASABKAkSFwoPaW5jbHVkZV9oaXN0b3J5GAIgASgIIpcBChBNYXJrZXREYXRhU3RyZWFtEhEKCXRpbWVzdGFtcBgBIAEoAxIQCghiaW5fdGltZRgCIAEoCRInCgZlcXVpdHkYAyADKAsyFy5tYXJrZXRfZGF0YS5FcXVpdHlEYXRhEh8KAmZ4GAQgAygLMhMubWFya2V0X2RhdGEuRlhSYXRlEhQKDGJhdGNoX251bWJlchgFIAEoBTJvChFNYXJrZXREYXRhU2VydmljZRJaChVTdWJzY3JpYmVUb01hcmtldERhdGESIC5tYXJrZXRfZGF0YS5TdWJzY3JpcHRpb25SZXF1ZXN0Gh0ubWFya2V0X2RhdGEuTWFya2V0RGF0YVN0cmVhbTABQncKD2NvbS5tYXJrZXRfZGF0YUIcTWFya2V0RXhjaGFuZ2VJbnRlcmZhY2VQcm90b1ABogIDTVhYqgIKTWFya2V0RGF0YcoCCk1hcmtldERhdGHiAhZNYXJrZXREYXRhXEdQQk1ldGFkYXRh6gIKTWFya2V0RGF0YWIGcHJvdG8z");

/**
 * Equity data bar for a single symbol
 *
 * @generated from message market_data.EquityData
 */
export type EquityData = Message<"market_data.EquityData"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: double open = 2;
   */
  open: number;

  /**
   * @generated from field: double high = 3;
   */
  high: number;

  /**
   * @generated from field: double low = 4;
   */
  low: number;

  /**
   * @generated from field: double close = 5;
   */
  close: number;

  /**
   * @generated from field: int32 volume = 6;
   */
  volume: number;

  /**
   * @generated from field: int32 trade_count = 7;
   */
  tradeCount: number;

  /**
   * @generated from field: double vwap = 8;
   */
  vwap: number;

  /**
   * @generated from field: string exchange = 9;
   */
  exchange: string;

  /**
   * @generated from field: string currency = 10;
   */
  currency: string;

  /**
   * @generated from field: double vwas = 11;
   */
  vwas: number;

  /**
   * @generated from field: double vwav = 12;
   */
  vwav: number;
};

/**
 * Describes the message market_data.EquityData.
 * Use `create(EquityDataSchema)` to create a new message.
 */
export const EquityDataSchema: GenMessage<EquityData> = /*@__PURE__*/
  messageDesc(file_main_services_market_exchange_interface, 0);

/**
 * FX rate data
 *
 * @generated from message market_data.FXRate
 */
export type FXRate = Message<"market_data.FXRate"> & {
  /**
   * @generated from field: string from_currency = 1;
   */
  fromCurrency: string;

  /**
   * @generated from field: string to_currency = 2;
   */
  toCurrency: string;

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;

  /**
   * @generated from field: double rate = 4;
   */
  rate: number;
};

/**
 * Describes the message market_data.FXRate.
 * Use `create(FXRateSchema)` to create a new message.
 */
export const FXRateSchema: GenMessage<FXRate> = /*@__PURE__*/
  messageDesc(file_main_services_market_exchange_interface, 1);

/**
 * Subscription request
 *
 * @generated from message market_data.SubscriptionRequest
 */
export type SubscriptionRequest = Message<"market_data.SubscriptionRequest"> & {
  /**
   * @generated from field: string subscriber_id = 1;
   */
  subscriberId: string;

  /**
   * @generated from field: bool include_history = 2;
   */
  includeHistory: boolean;
};

/**
 * Describes the message market_data.SubscriptionRequest.
 * Use `create(SubscriptionRequestSchema)` to create a new message.
 */
export const SubscriptionRequestSchema: GenMessage<SubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_main_services_market_exchange_interface, 2);

/**
 * Streamed market data batch
 *
 * @generated from message market_data.MarketDataStream
 */
export type MarketDataStream = Message<"market_data.MarketDataStream"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;

  /**
   * @generated from field: string bin_time = 2;
   */
  binTime: string;

  /**
   * @generated from field: repeated market_data.EquityData equity = 3;
   */
  equity: EquityData[];

  /**
   * @generated from field: repeated market_data.FXRate fx = 4;
   */
  fx: FXRate[];

  /**
   * @generated from field: int32 batch_number = 5;
   */
  batchNumber: number;
};

/**
 * Describes the message market_data.MarketDataStream.
 * Use `create(MarketDataStreamSchema)` to create a new message.
 */
export const MarketDataStreamSchema: GenMessage<MarketDataStream> = /*@__PURE__*/
  messageDesc(file_main_services_market_exchange_interface, 3);

/**
 * Simple streaming service
 *
 * @generated from service market_data.MarketDataService
 */
export const MarketDataService: GenService<{
  /**
   * @generated from rpc market_data.MarketDataService.SubscribeToMarketData
   */
  subscribeToMarketData: {
    methodKind: "server_streaming";
    input: typeof SubscriptionRequestSchema;
    output: typeof MarketDataStreamSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_services_market_exchange_interface, 0);

