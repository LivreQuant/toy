// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file main/services/session_exchange_interface.proto (package session_exchange, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file main/services/session_exchange_interface.proto.
 */
export const file_main_services_session_exchange_interface: GenFile = /*@__PURE__*/
  fileDesc("Ci5tYWluL3NlcnZpY2VzL3Nlc3Npb25fZXhjaGFuZ2VfaW50ZXJmYWNlLnByb3RvEhBzZXNzaW9uX2V4Y2hhbmdlIkcKDVN0cmVhbVJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIRCgljbGllbnRfaWQYAiABKAkSDwoHc3ltYm9scxgDIAMoCSLCAQoSRXhjaGFuZ2VEYXRhVXBkYXRlEhEKCXRpbWVzdGFtcBgBIAEoAxIxCgttYXJrZXRfZGF0YRgCIAMoCzIcLnNlc3Npb25fZXhjaGFuZ2UuTWFya2V0RGF0YRIwCgtvcmRlcnNfZGF0YRgDIAMoCzIbLnNlc3Npb25fZXhjaGFuZ2UuT3JkZXJEYXRhEjQKCXBvcnRmb2xpbxgEIAEoCzIhLnNlc3Npb25fZXhjaGFuZ2UuUG9ydGZvbGlvU3RhdHVzIoEBCgpNYXJrZXREYXRhEg4KBnN5bWJvbBgBIAEoCRILCgNiaWQYAiABKAESCwoDYXNrGAMgASgBEhAKCGJpZF9zaXplGAQgASgFEhAKCGFza19zaXplGAUgASgFEhIKCmxhc3RfcHJpY2UYBiABKAESEQoJbGFzdF9zaXplGAcgASgFIm0KCU9yZGVyRGF0YRIQCghvcmRlcl9pZBgBIAEoCRIOCgZzeW1ib2wYAiABKAkSDgoGc3RhdHVzGAMgASgJEhcKD2ZpbGxlZF9xdWFudGl0eRgEIAEoBRIVCg1hdmVyYWdlX3ByaWNlGAUgASgBImsKD1BvcnRmb2xpb1N0YXR1cxItCglwb3NpdGlvbnMYASADKAsyGi5zZXNzaW9uX2V4Y2hhbmdlLlBvc2l0aW9uEhQKDGNhc2hfYmFsYW5jZRgCIAEoARITCgt0b3RhbF92YWx1ZRgDIAEoASJYCghQb3NpdGlvbhIOCgZzeW1ib2wYASABKAkSEAoIcXVhbnRpdHkYAiABKAUSFAoMYXZlcmFnZV9jb3N0GAMgASgBEhQKDG1hcmtldF92YWx1ZRgEIAEoASIsChBIZWFydGJlYXRSZXF1ZXN0EhgKEGNsaWVudF90aW1lc3RhbXAYAyABKAMiPgoRSGVhcnRiZWF0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIYChBzZXJ2ZXJfdGltZXN0YW1wGAIgASgDMs8BChhTZXNzaW9uRXhjaGFuZ2VTaW11bGF0b3ISXQoSU3RyZWFtRXhjaGFuZ2VEYXRhEh8uc2Vzc2lvbl9leGNoYW5nZS5TdHJlYW1SZXF1ZXN0GiQuc2Vzc2lvbl9leGNoYW5nZS5FeGNoYW5nZURhdGFVcGRhdGUwARJUCglIZWFydGJlYXQSIi5zZXNzaW9uX2V4Y2hhbmdlLkhlYXJ0YmVhdFJlcXVlc3QaIy5zZXNzaW9uX2V4Y2hhbmdlLkhlYXJ0YmVhdFJlc3BvbnNlQpEBChRjb20uc2Vzc2lvbl9leGNoYW5nZUIdU2Vzc2lvbkV4Y2hhbmdlSW50ZXJmYWNlUHJvdG9QAaICA1NYWKoCD1Nlc3Npb25FeGNoYW5nZcoCD1Nlc3Npb25FeGNoYW5nZeICG1Nlc3Npb25FeGNoYW5nZVxHUEJNZXRhZGF0YeoCD1Nlc3Npb25FeGNoYW5nZWIGcHJvdG8z");

/**
 * @generated from message session_exchange.StreamRequest
 */
export type StreamRequest = Message<"session_exchange.StreamRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: repeated string symbols = 3;
   */
  symbols: string[];
};

/**
 * Describes the message session_exchange.StreamRequest.
 * Use `create(StreamRequestSchema)` to create a new message.
 */
export const StreamRequestSchema: GenMessage<StreamRequest> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 0);

/**
 * @generated from message session_exchange.ExchangeDataUpdate
 */
export type ExchangeDataUpdate = Message<"session_exchange.ExchangeDataUpdate"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;

  /**
   * @generated from field: repeated session_exchange.MarketData market_data = 2;
   */
  marketData: MarketData[];

  /**
   * @generated from field: repeated session_exchange.OrderData orders_data = 3;
   */
  ordersData: OrderData[];

  /**
   * @generated from field: session_exchange.PortfolioStatus portfolio = 4;
   */
  portfolio?: PortfolioStatus;
};

/**
 * Describes the message session_exchange.ExchangeDataUpdate.
 * Use `create(ExchangeDataUpdateSchema)` to create a new message.
 */
export const ExchangeDataUpdateSchema: GenMessage<ExchangeDataUpdate> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 1);

/**
 * @generated from message session_exchange.MarketData
 */
export type MarketData = Message<"session_exchange.MarketData"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: double bid = 2;
   */
  bid: number;

  /**
   * @generated from field: double ask = 3;
   */
  ask: number;

  /**
   * @generated from field: int32 bid_size = 4;
   */
  bidSize: number;

  /**
   * @generated from field: int32 ask_size = 5;
   */
  askSize: number;

  /**
   * @generated from field: double last_price = 6;
   */
  lastPrice: number;

  /**
   * @generated from field: int32 last_size = 7;
   */
  lastSize: number;
};

/**
 * Describes the message session_exchange.MarketData.
 * Use `create(MarketDataSchema)` to create a new message.
 */
export const MarketDataSchema: GenMessage<MarketData> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 2);

/**
 * @generated from message session_exchange.OrderData
 */
export type OrderData = Message<"session_exchange.OrderData"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;

  /**
   * @generated from field: string symbol = 2;
   */
  symbol: string;

  /**
   * @generated from field: string status = 3;
   */
  status: string;

  /**
   * @generated from field: int32 filled_quantity = 4;
   */
  filledQuantity: number;

  /**
   * @generated from field: double average_price = 5;
   */
  averagePrice: number;
};

/**
 * Describes the message session_exchange.OrderData.
 * Use `create(OrderDataSchema)` to create a new message.
 */
export const OrderDataSchema: GenMessage<OrderData> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 3);

/**
 * @generated from message session_exchange.PortfolioStatus
 */
export type PortfolioStatus = Message<"session_exchange.PortfolioStatus"> & {
  /**
   * @generated from field: repeated session_exchange.Position positions = 1;
   */
  positions: Position[];

  /**
   * @generated from field: double cash_balance = 2;
   */
  cashBalance: number;

  /**
   * @generated from field: double total_value = 3;
   */
  totalValue: number;
};

/**
 * Describes the message session_exchange.PortfolioStatus.
 * Use `create(PortfolioStatusSchema)` to create a new message.
 */
export const PortfolioStatusSchema: GenMessage<PortfolioStatus> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 4);

/**
 * @generated from message session_exchange.Position
 */
export type Position = Message<"session_exchange.Position"> & {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;

  /**
   * @generated from field: double average_cost = 3;
   */
  averageCost: number;

  /**
   * @generated from field: double market_value = 4;
   */
  marketValue: number;
};

/**
 * Describes the message session_exchange.Position.
 * Use `create(PositionSchema)` to create a new message.
 */
export const PositionSchema: GenMessage<Position> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 5);

/**
 * @generated from message session_exchange.HeartbeatRequest
 */
export type HeartbeatRequest = Message<"session_exchange.HeartbeatRequest"> & {
  /**
   * @generated from field: int64 client_timestamp = 3;
   */
  clientTimestamp: bigint;
};

/**
 * Describes the message session_exchange.HeartbeatRequest.
 * Use `create(HeartbeatRequestSchema)` to create a new message.
 */
export const HeartbeatRequestSchema: GenMessage<HeartbeatRequest> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 6);

/**
 * @generated from message session_exchange.HeartbeatResponse
 */
export type HeartbeatResponse = Message<"session_exchange.HeartbeatResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: int64 server_timestamp = 2;
   */
  serverTimestamp: bigint;
};

/**
 * Describes the message session_exchange.HeartbeatResponse.
 * Use `create(HeartbeatResponseSchema)` to create a new message.
 */
export const HeartbeatResponseSchema: GenMessage<HeartbeatResponse> = /*@__PURE__*/
  messageDesc(file_main_services_session_exchange_interface, 7);

/**
 * @generated from service session_exchange.SessionExchangeSimulator
 */
export const SessionExchangeSimulator: GenService<{
  /**
   * Single unified stream for all exchange data
   *
   * @generated from rpc session_exchange.SessionExchangeSimulator.StreamExchangeData
   */
  streamExchangeData: {
    methodKind: "server_streaming";
    input: typeof StreamRequestSchema;
    output: typeof ExchangeDataUpdateSchema;
  },
  /**
   * Heartbeat to verify connection
   *
   * @generated from rpc session_exchange.SessionExchangeSimulator.Heartbeat
   */
  heartbeat: {
    methodKind: "unary";
    input: typeof HeartbeatRequestSchema;
    output: typeof HeartbeatResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_services_session_exchange_interface, 0);

