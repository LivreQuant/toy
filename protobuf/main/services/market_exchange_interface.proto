syntax = "proto3";

package market_data;

// Equity data bar for a single symbol
message EquityData {
  string symbol = 1;
  double open = 2;
  double high = 3;
  double low = 4;
  double close = 5;
  int32 volume = 6;
  int32 trade_count = 7;
  double vwap = 8;
  string exchange = 9;
  string currency = 10;
  double vwas = 11;
  double vwav = 12;
}

// FX rate data
message FXRate {
  string from_currency = 1;
  string to_currency = 2;
  string timestamp = 3;
  double rate = 4;
}

// Subscription request
message SubscriptionRequest {
  string subscriber_id = 1;
  bool include_history = 2;
}

// Streamed market data batch
message MarketDataStream {
  int64 timestamp = 1;
  string bin_time = 2;
  repeated EquityData equity = 3;
  repeated FXRate fx = 4;
  int32 batch_number = 5;
}

// Simple streaming service
service MarketDataService {
  rpc SubscribeToMarketData(SubscriptionRequest) returns (stream MarketDataStream);
}